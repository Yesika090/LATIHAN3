class Stack:
    def __init__(self):
        self.data = []

    def getLen(self):
        return len(self.data)

    def pop(self):
        if not self.isEmpty():
            return self.data.pop()
        return None  # Jika stack kosong

    def top(self):
        if not self.isEmpty():
            return self.data[-1]
        return None  # Jika stack kosong

    def push(self, data):
        self.data.append(data)

    def printData(self):
        # Cetak data dari atas ke bawah (paling baru ke paling lama)
        for item in reversed(self.data):
            print(item)

    def isEmpty(self):
        return len(self.data) == 0

# Fungsi untuk menampilkan elemen pertama yang masuk (paling bawah)
def printDataPertama(stack):
    if not stack.isEmpty():
        print(stack.data[0])  # Elemen pertama berada di indeks 0

# Test Case pada program
if __name__ == "__main__":
    # Mengisi stack
    s = Stack()
    s.push(1)
    s.push(2)
    s.push(1.5)
    s.push(5)
    s.push(3)

    print("Data stack:")
    s.printData()
    print()

    print("Menampilkan Data stack paling bawah:")
    printDataPertama(s)
    print()

    print("Pembuktian bahwa isi stack tidak berubah:")
    s.printData()
